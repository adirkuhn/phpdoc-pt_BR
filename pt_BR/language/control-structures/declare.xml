<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 338501 Maintainer: ae Status: ready --><!-- CREDITS: diegopires,ae -->

<sect1 xml:id="control-structures.declare" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title><literal>declare</literal></title>
 <?phpdoc print-version-for="declare"?>
 <para>
  A instrução <literal>declare</literal> é usado
  para definir diretivas de execução para um bloco de código.
  A sintaxe do <literal>declare</literal> é similar à
  sintaxe de outras estruturas de controle de fluxo:
  <informalexample>
   <programlisting>
<![CDATA[
declare (directive)
    statement
]]>
   </programlisting>
  </informalexample>
 </para>

 <para>
  A seção <literal>directive</literal> permite que
  o comportamento do bloco do <literal>declare</literal> seja
  definido.
  Atualmente três diretivas são reconhecidas: a diretiva
  <literal>ticks</literal> (Veja abaixo para mais
  informações da diretiva
  <link linkend="control-structures.declare.ticks">ticks</link>),
  a diretiva <literal>encoding</literal> (Veja abaixo para mais
  informações da diretiva
  <link linkend="control-structures.declare.encoding">encoding</link>)
  e a diretiva <literal>strict_types</literal> (Veja abaixo para mais
  informações na seção
  <link linkend="functions.arguments.type-declaration.strict">strict</link>
  sobre argumentos de função).
 </para>
 <para>
  <informaltable>
       <tgroup cols="2">
        <thead>
         <row>
          <entry>&Version;</entry>
          <entry>&Description;</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>5.3.0</entry>
          <entry>Diretiva de encoding adicionada</entry>
         </row>
         <row>
          <entry>7.0.0</entry>
          <entry>Diretiva strict_types adicionada</entry>
         </row>
        </tbody>
       </tgroup>
      </informaltable>
 </para>
 <para>
  Como as 'directives' são tratadas enquanto o arquivo é compilado, somente literais podem
  ser usadas como valores de 'directives'. Variáveis e constantes não podem ser usadas. Para
  ilustrar:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
// Isto é válido:
declare(ticks=1);

// isto é inválido:
const TICK_VALUE = 1;
declare(ticks=TICK_VALUE);
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  O <literal>statement</literal> que faz parte do bloco do 
  <literal>declare</literal> será executado - como
  ele é executado e quais os efeitos secundários que ocorrem durante
  a execução depende da diretiva definida no bloco
  <literal>directive</literal>.
 </para>
 <para>
  O construtor do <literal>declare</literal> também pode ser usado
  no escopo global, afetando todo o código que o segue (entretanto se o arquivo com o 
  <literal>declare</literal> for incluido ele não afeta o
  arquivo principal).
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
// these are the same:

// you can use this:
declare(ticks=1) {
    // entire script here
}

// or you can use this:
declare(ticks=1);
// entire script here
?>
]]>
   </programlisting>
  </informalexample>
 </para>

 <sect2 xml:id="control-structures.declare.ticks">
  <title>Ticks</title>
  <para>Um 'tick' é um evento que ocorre para cada
  <varname>N</varname> declarações de baixo nível executadas
  pelo interpretador dentro do bloco <literal>declare</literal>.
  O valor de <varname>N</varname> é especificado
  usando <code>ticks=<varname>N</varname></code>
  dentro do bloco <literal>declare</literal> da seção
  <literal>directive</literal>.
 </para>
 <para>
  Nem todas declarações são passiveis de executar um 'tick'. Normalmente, expressões de 
  condições e argumentos de expressões não são.
 </para>
 <para>
  O(s) evento(s) que serão executados em cada 'tick' são especificados usando a função
  <function>register_tick_function</function>. Veja o exemplo 
  abaixo para mais detalhes. Note que mais de um evento pode ser executado
  para cada 'tick'.
 </para>
 <para>
  <example>
   <title>Tick usage example</title>
   <programlisting role="php">
<![CDATA[
<?php

declare(ticks=1);

// A function called on each tick event
function tick_handler()
{
    echo "tick_handler() called\n";
}

register_tick_function('tick_handler');

$a = 1;

if ($a > 0) {
    $a += 2;
    print($a);
}

?>
]]>
   </programlisting>
  </example>
 </para>
 <para>
  <example>
   <title>Exemplos de uso de 'Ticks'</title>
   <programlisting role="php">
<![CDATA[
<?php

function tick_handler()
{
  echo "tick_handler() called\n";
}

$a = 1;
tick_handler();

if ($a > 0) {
    $a += 2;
    tick_handler();
    print($a);
    tick_handler();
}
tick_handler();

?>
]]>
   </programlisting>
  </example>
 </para>
 <simpara>
  Veja mais sobre <function>register_tick_function</function> e
  <function>unregister_tick_function</function>.
 </simpara>
 </sect2>
 <sect2 xml:id="control-structures.declare.encoding">
  <title>Encoding</title>
  <para>
    O encoding de um código pode ser definido no script usando a 'directive' encoding.
  <example>
   <title>Declarando um encoding para o script.</title>
    <programlisting role="php">
<![CDATA[
<?php
declare(encoding='ISO-8859-1');
// code here
?>
]]>
    </programlisting>
   </example>
  </para>

  <caution>
   <simpara>
    Quando usada com namespaces, a única sintaxe válida para declarar
    é <literal>declare(encoding='...');</literal> onde <literal>...</literal>
    é o valor do encoding.  <literal>declare(encoding='...') {}</literal>
    irá resultar em um erro de sintaxe quando usada com namespaces.
   </simpara>
  </caution>
  <para>
   A declarão de encoding é ignorada no PHP 5.3 exceto seo o PHP for compilado com
   <literal>--enable-zend-multibyte</literal>.
  </para>
  <para>
   Note que o PHP não mostra se <literal>--enable-zend-multibyte</literal> foi 
   usada para compilar com exceção da utilização do <function>phpinfo</function>.
  </para>
  <para>
   Veja mais <link linkend="ini.zend.script-encoding">zend.script_encoding</link>.
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
