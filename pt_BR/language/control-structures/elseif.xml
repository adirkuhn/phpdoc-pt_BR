<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 312947 Maintainer: __diegopires Status: ready --><!-- CREDITS: diegopires -->

<sect1 xml:id="control-structures.elseif" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title><literal>elseif</literal>/<literal>else if</literal></title>
 <?phpdoc print-version-for="elseif"?>
 <para>
  <literal>elseif</literal>, é o que o nome sugere, uma combinação
  do <literal>if</literal> e do <literal>else</literal>. Como o
  <literal>else</literal>, ele extende um <literal>if</literal>
  para executar instruções diferentes no caso do 
  <literal>if</literal> original retornar
  &false;.  Entretanto, diferente do
  <literal>else</literal>, ele executará uma expressão alternativa
  somente se a condição do <literal>elseif</literal>
  retornar &true;. Por exemplo, o código
  a seguir exibirá <computeroutput>a is bigger than
  b</computeroutput>, <computeroutput>a equal to b</computeroutput>
  ou <computeroutput>a is smaller than b</computeroutput>:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
if ($a > $b) {
    echo "a is bigger than b";
} elseif ($a == $b) {
    echo "a is equal to b";
} else {
    echo "a is smaller than b";
}
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <simpara>
  Pode haver vários <literal>elseif</literal>s dentro do mesmo
  <literal>if</literal>. A primeira expressão
  <literal>elseif</literal> (se houver) que retornar
  &true; será executado. No PHP, você pode 
  escrever 'else if' (em duas palavras) que o comportamento será idêntico
  a 'elseif' (em uma única palavra). O significado sintático
  é um pouco diferente (se você está familiarizado com C, o comportamento
  é o mesmo) mas no fundo é que ambos terão exatamente
  o mesmo comportamento.
 </simpara>
 <simpara>
  O <literal>elseif</literal> só é executado se o 
  <literal>if</literal> precedente ou qualquer 
  <literal>elseif</literal> retornar 
  &false;, e o <literal>elseif</literal>
  atual retornar
  &true;.
 </simpara>
 <note>
  <simpara>
   Note que  <literal>elseif</literal> e <literal>else if</literal>
   só serão considerados exatamente iguais se usados com chaves
   como no exemplo abaixo. Quando usando com dois pontos (:) para definir as
   condições <literal>if</literal>/<literal>elseif</literal>, você não
   pode separar <literal>else if</literal> em duas palavras, ou o PHP irá
   falhar com um erro de interpretação.
  </simpara>
 </note>
 <para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

/* Incorrect Method: */
if($a > $b):
    echo $a." is greater than ".$b;
else if($a == $b): // Will not compile.
    echo "The above line causes a parse error.";
endif;


/* Correct Method: */
if($a > $b):
    echo $a." is greater than ".$b;
elseif($a == $b): // Note the combination of the words.
    echo $a." equals ".$b;
else:
    echo $a." is neither greater than or equal to ".$b;
endif;

?>
]]>
   </programlisting>
  </informalexample>
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
